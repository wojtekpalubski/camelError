<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://camel.apache.org/schema/spring
	http://camel.apache.org/schema/spring/camel-spring.xsd"
>
    <bean class="pl.wpe.PlikWalidacjaProcesor"
          id="PlikWalidacjaProcesor"/>
    <bean class="pl.wpe.UzupelnijPlikProcesor"
          id="UzupelnijPlikProcesor"/>
    <bean class="pl.wpe.ZakonczRouteException"
          id="ZakonczRouteException"/>
    <bean class="pl.wpe.SplitAgregator"
          id="SplitAgregator"/>
    <bean class="pl.wpe.WireTapBodyBean"
          id="WireTapBodyBean"/>
    <bean class="pl.wpe.WireTapeDiagnstykaBean"
          id="WireTapeDiagnstykaBean"/>
    <bean class="pl.wpe.ZglosWyjatekProcesor"
          id="ZglosWyjatekProcesor"/>

    <camelContext id="CamelErrorContext" xmlns="http://camel.apache.org/schema/spring"
                  errorHandlerRef="DeadLetterErrorhandler">

        <errorHandler id="DeadLetterErrorhandler" type="DeadLetterChannel" deadLetterUri="file:dl"
                      useOriginalMessage="true">
            <redeliveryPolicy maximumRedeliveries="0" redeliveryDelay="1000"
                              retryAttemptedLogLevel="WARN"
                              backOffMultiplier="2" useExponentialBackOff="true"/>
        </errorHandler>

        <errorHandler id="ZwyklyErrorHandler">
            <redeliveryPolicy maximumRedeliveries="2" redeliveryDelay="1000"
                              retryAttemptedLogLevel="WARN"/>
        </errorHandler>

        <errorHandler id="WireTapCopyErrorhandler" type="DeadLetterChannel" deadLetterUri="file:wiretapDLQ"
                      useOriginalMessage="false">
            <redeliveryPolicy maximumRedeliveries="10" redeliveryDelay="1000"
                              retryAttemptedLogLevel="WARN"
                              backOffMultiplier="2" useExponentialBackOff="true"/>
        </errorHandler>
        <!--<onException>-->
        <!--<exception>java.lang.Exception</exception>-->
        <!--<handled>-->
        <!--<constant>true</constant>-->
        <!--</handled>-->
        <!--&lt;!&ndash;<to uri="direct:obslugaBledu"/>&ndash;&gt;-->
        <!--<to uri="log:przechwycono Exception"/>-->
        <!--</onException>-->

        <!--<onException>-->
        <!--<exception>pl.wpe.BlednyPlikException</exception>-->
        <!--<handled>-->
        <!--<constant>false</constant>-->
        <!--</handled>-->
        <!--<log message="Obsluga bednego pliku w kontekscie"/>-->
        <!--&lt;!&ndash;<to uri="direct:obslugaBledu"/>&ndash;&gt;-->
        <!--</onException>-->

        <route id="odczytPlikuRoute">
            <from uri="file:we?delay=5s"></from>
            <log message="Czytam plik: ${file:name}"/>
            <!--<log message="Uzupelniam plik ${file:name}"/>-->
            <!--<process ref="UzupelnijPlikProcesor"/>-->
            <to uri="direct:bladSplit2"/>
        </route>

        <route>
            <from uri="direct:prostyBlad"/>
            <doTry>
                <log message="proba"/>
                <process ref="PlikWalidacjaProcesor"/>
                <log message="proba ok"/>
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <handled>
                        <constant>false</constant>
                    </handled>

                    <log message="Przechwycone wyjatek procesora"/>
                </doCatch>
            </doTry>
            <to uri="log:poBledzie"/>
        </route>

        <route id="bladSplit2">
            <from uri="direct:bladSplit2"/>
            <log message="splituje: ${body}"/>
            <doTry>
                <split strategyRef="SplitAgregator" stopOnException="true">
                    <tokenize token="\n"/>
                    <log message="W splicie1: ${body}"/>
                    <!--<setBody>-->
                    <!--<simple>${property.CamelSplitIndex},${property.CamelSplitSize} - ${body}</simple>-->
                    <!--</setBody>-->
                    <process ref="PlikWalidacjaProcesor"/>
                    <log message="W splicie2: ${body}"/>
                </split>
                <doCatch>
                    <exception>pl.wpe.BlednyPlikException</exception>
                    <handled>
                        <constant>false</constant>
                    </handled>
                    <log message="Przechwycony BlednyPlikException z procesora w splicie: ${body} - ${exception}"/>
                </doCatch>
                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <handled>
                        <constant>false</constant>
                    </handled>

                    <log message="Przechwycony wyjatek procesora w splicie: ${body} - ${exception}"/>
                </doCatch>
            </doTry>

            <log message="Body po powrocie ze splitu:\n ${body}"/>

        </route>

        <route id="bladSplit">
            <from uri="direct:bladSplit"/>
            <log message="splituje: ${body}"/>
            <split strategyRef="SplitAgregator">
                <tokenize token="\n"/>
                <doTry>
                    <log message="W splicie1: ${body}"/>
                    <!--<setBody>-->
                    <!--<simple>${property.CamelSplitIndex},${property.CamelSplitSize} - ${body}</simple>-->
                    <!--</setBody>-->
                    <process ref="PlikWalidacjaProcesor"/>
                    <log message="W splicie2: ${body}"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>false</constant>
                        </handled>


                        <log message="Przechwycony wyjatek procesora w splicie: ${exception}"/>
                    </doCatch>
                </doTry>
            </split>

            <log message="Body po powrocie ze splitu:\n ${body}"/>

        </route>


        <route id="walidacjaPlikuRoute" errorHandlerRef="ZwyklyErrorHandler" autoStartup="false">
            <from uri="direct:walidacjaPliku"/>
            <log message="Przetwarzam ${body}"/>
            <log message="Uzupelniam plik ${file:name}"/>
            <process ref="UzupelnijPlikProcesor"/>
            <log message="Waliduje plik ${file:name}"/>
            <process ref="PlikWalidacjaProcesor"/>
            <to uri="direct:zapisPliku"/>
        </route>

        <route id="splitPliku">
            <from uri="direct:splitPliku"/>
            <log message="splituje ${body}"/>
            <split strategyRef="SplitAgregator">
                <tokenize token="\n"/>
                <log message="W splicie1: ${body}"/>
                <setBody>
                    <simple>${property.CamelSplitIndex},${property.CamelSplitSize} - ${body}</simple>
                </setBody>
                <process ref="UzupelnijPlikProcesor"/>
                <log message="W splicie2: ${body}"/>
            </split>

            <log message="Body po splicie:\n ${body}"/>

        </route>

        <route id="zapisPlikuRoute">
            <from uri="direct:zapisPliku"/>
            <to uri="file:wy"/>
        </route>

        <route id="obslugaBleduRoute">
            <from uri="direct:obslugaBledu"/>
            <log message="routa Obsluga bledu ${exception}"/>
            <!--<throwException ref="Exception"/>-->
            <to uri="file:blad"/>
        </route>

        <route id="WireTapBodyRoute" autoStartup="true">
            <from uri="timer:przedWireTape?repeatCount=1"/>
            <setHeader headerName="EPO_JAKIS_NAGLOWEK">
                <constant>jakis naglowek</constant>
            </setHeader>
            <bean ref="WireTapBodyBean" method="utworzNowy(1,'komunikat')"/>
            <to uri="log:przedWiretape?showAll=true"/>
            <wireTap uri="direct:wireTapCopy" copy="true"/>
            <to uri="log:poWiretape?showAll=true"/>
            <log message="OK BODY koniec"/>
        </route>
        <route id="WireTapCopyRoute" autoStartup="true" errorHandlerRef="WireTapCopyErrorhandler">
            <from uri="direct:wireTapCopy"/>
            <to uri="log:wWiretape1?showAll=true"/>
            <bean ref="WireTapBodyBean" method="utworzNowy(2,'zmienionyKomunikat')"/>
            <to uri="log:wWiretape2?showAll=true"/>
            <!--<process ref="ZglosWyjatekProcesor"/>-->
            <to uri="log:wWiretape3?showAll=true"/>
            <bean ref="WireTapeDiagnstykaBean" method="utworzKomunikatDiagnostyczny"/>
            <to uri="log:wWiretape4?showAll=true"/>
            <log message="OK DIAGNOSTYKA koniec"/>
        </route>

    </camelContext>
</beans>